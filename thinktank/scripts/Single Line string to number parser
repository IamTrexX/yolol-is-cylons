Takes a single yolol cycle per digit to decode a number that has been converted to a string

s: string to test wether the current digit is odd
d: current digit being decoded
r: string being decoded
e: accumulator for decoded number
t: number base (usually 10)
j: digit counter

First decodes to the lower even number, then adds one if the current digit is odd.
Goto is used to loop back to the same line.
Loop is broken if r input string is empty and r---r throws a runtime error


Version if number is being decoded Least Significant Digit first //61 characters//

s="13579x t=10" //only has to be declared once, dont need to use this line again
d=r---r e+=(2*((d>1)+(d>3)+(d>5)+(d>7))+(s<s-d))*t^j++ goto 2


Version if number is decoded Most Significant Digit first //60 characters//

s="13579x t=10"
d=r---r e*=t e+=(2*((d>1)+(d>3)+(d>5)+(d>7))+(s<s-d)) goto 2
